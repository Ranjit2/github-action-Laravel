name: Deploy CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure PHP 8.1 
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: mbstring, xml, curl, pdo, zip, openssl, bcmath, json, tokenizer, ctype, dom, fileinfo, xmlwriter, pdo_mysql

    - name: Install Composer dependencies
      run: |
        composer install --no-interaction --prefer-dist
    
    - name: Set application key
      run: php artisan key:generate

    # - name: Set up MySQL
    #   run: |
    #     sudo service mysql start
    #     mysql -e 'CREATE DATABASE IF NOT EXISTS your_database_name'

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14

    # - name: Install Vue CLI
    #   run: |
    #     npm install -g @vue/cli

    - name: Install NPM dependencies
      run: |
        npm install

    - name: Build assets
      run: |
        npm run production

    # - name: Run Laravel Migrations and Seed
    #   run: |
    #     php artisan migrate --force
    #     php artisan db:seed --force

    # - name: Print working directory
    #   run: pwd

    # - name: List files in the current directory
    #   run: ls -l

    - name: Run tests
      run: |
        ./vendor/bin/phpunit

    - name: Create deployment artifact 
      run: tar -czf app.tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *

    - name: Store artifacts for distribution
      uses: actions/upload-artifact@v2
      with:
        name: app-build
        path: app.tar.gz
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Production
      run: |
        # Replace 'user', 'xyz', and '/path/to/your/app' with your actual server details
        ssh user@xyz "cd /path/to/your/app && git pull origin main && composer install --no-interaction --prefer-dist && php artisan migrate --force && php artisan optimize"

  